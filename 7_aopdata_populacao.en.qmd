# Population and socioeconomic data

The population data used in the Access to Opportunities project comes from the 2010 Census. This data brings aggregate information on the spatial distribution of the population by income per capita, race, sex, and age, , and it can be downloaded with the `aopdata::read_population()` function. To download data for a specific city, the function needs a value to be provided for the `city` parameter. To download the data with the spatial information of each grid cell, the `geometry` parameter must receive the value `TRUE` (by default, this value is `FALSE`, so that the geometry of the cells is not downloaded).

In the example below, we show how to download the population and socioeconomic data of Fortaleza:

```{r}
#| message: false
#| warning: false
# downloads aop sociodemographic data
data_fortaleza <- aopdata::read_population(
  city = "Fortaleza",
  year = 2010,
  geometry = TRUE,
  showProgress = FALSE
)
```
 
The data table includes the reference year of the population census, the ids of hexagons and municipality, and socioeconomic data in multiple columns with encoded names:

```{r}
names(data_fortaleza)
```
 
@tbl-population_dictionary presents the data dictionary, with the description of each of the columns in the data, as well as observations about some of its values. This description can also be found in the documentation of the function by running in R the `?read_population`.

```{r}
#| echo: false
#| label: tbl-population_dictionary
#| tbl-cap: Description of the columns in the population and socioeconomic data table
tbl <- tibble::tribble(
  ~Coluna,  		~Description,                        			~Observation,
  "year",   		"Reference year",               			"",
  "id_hex", 		"Unique hexagon identifier", 			"",
  "abbrev_muni", "Abbreviation of 3 letters of the municipality",  			"",
  "name_muni",   "Name of the municipality",               			"",
  "code_muni",   "7-digit IBGE code of the municipality", "",
  "P001",   		"Total number of people",     			"",
  "P002",   		"Number of white people",   			"",
  "P003",   		"Number of black people",    			"",
  "P004",   		"Number of indigenous people", 			"",
  "P005",   		"Number of people of yellow color",    	"",
  "P006",   		"Number of men",            			"",
  "P007",   		"Number of women",          			"",
  "P010",   		"Number of people from 0 to 5 years", 		"",
  "P011",   		"Number of people from 6 to 14 years",    	"",
  "P012",   		"Number of people from 15 to 18 years",   	"",
  "P013",   		"Number of people aged 19 to 24 years",   	"",
  "P014",   		"Number of people aged 25 to 39 years",   	"",
  "P015",   		"Number of people aged 40 to 69 years",   	"",
  "P016",   		"Number of people aged 70 years and over", "",
  "R001",   		"Average per capita household income", 		"2010 values, in Reais (R$)",
  "R002",   		"Income quintile",                			"Values from 1 (poorest) to 5 (richest)",
  "R003",    	"Income decile",                  			"Values from 1 (poorest) to 10 (richest)",
  "geometry",   	"Spatial geometry",              			""
)

knitr::kable(tbl)
```

The following sections show examples of how to visualize these data in the form of maps.
 
## Spatial distribution of population

In the code below, we load a couple data visualization libraries and create the map. With a single command, we can visualize the spatial distribution of the population of Fortaleza. The figure shows a choropleth map where the color of each grid cell represents the total size of its resident population (variable `P001`).

```{r}
#| message: false
#| warning: false
library(patchwork)
library(ggplot2)

ggplot(subset(data_fortaleza, P001 > 0)) +
  geom_sf(aes(fill = P001), color = NA, alpha = 0.8) +
  scale_fill_distiller(palette = "YlOrRd", direction = 1) +
  labs(
      title = "Spatial distribution of the population",
      subtitle = "Fortaleza",
      fill = "Population count"
  ) +
  theme_void()
```

## Map of population by race

Besides reporting the total population count in each cell, the data also includes information on population count by race (variables `P002` to `P005`), gender (variables `P006`  and `P007`) and age group (variables `P010` to `P016`). The code below illustrates how simple it is to calculate the proportion of black and white people in each hexagon and visualize these proportions on a map.

```{r}
pop_black <- ggplot(subset(data_fortaleza, P001 > 0)) +
  geom_sf(aes(fill = P003 / P001), color = NA, alpha = 0.8) +
  scale_fill_distiller(
      palette = "RdPu",
      direction = 1,
      labels = scales::percent,
      limits = c(0, 1)
  ) +
  labs(title = "Proportion of black people", fill = "Black pop") +
  theme_void()

pop_white <- ggplot(subset(data_fortaleza, P001 > 0)) +
  geom_sf(aes(fill = P002 / P001), color = NA, alpha = 0.8) +
  scale_fill_distiller(
      palette = "YlGnBu",
      direction = 1,
      labels = scales::percent,
      limits = c(0, 1)
  ) +
  labs(title = "Proportion of white people", fill = "White pop") +
  theme_void()

pop_black + pop_white
```

## Map of population by income

Finally, the data also provide information about the average income per capita of each hexagon (`R001`) and its classification in terms of quintile (`R002`) and income decile (`R003`). Using this data, we can visualize the spatial distribution of income levels in the city.

```{r}
income <- ggplot(subset(data_fortaleza, P001 > 0)) +
  geom_sf(aes(fill = R001), color = NA, alpha = 0.8) +
  scale_fill_distiller(palette = "YlOrRd", direction = 1) +
  labs(title = "Average income per capita", fill = "Income (R$)") +
  theme_void()

deciles <- ggplot(subset(data_fortaleza, !is.na(R002))) +
  geom_sf(aes(fill = factor(R003)), color = NA, alpha = 0.8) +
  scale_fill_brewer(palette = "RdBu") +
  labs(
      title = "Deciles of average income per capita",
      fill = "Income decile"
  ) +
  theme_void() +
  theme(legend.key.size = unit(0.3, "cm"))

income + deciles
```
